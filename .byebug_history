c
exit
values[0][2]
values[0][1]
values[0]
values
values.push([row[0], row[1]])
values
c
exit
row[0]
row[0].gsub!(/^[(]/, '').gsub!(/[)]/, '')
row[0].gsub(/^[(]/, '').gsub(/[)]/, '')
row[0].gsub(/^[(]/, '')
row[0]
row[1]
c
{alert: "dasd", url_object: @new_url}.to_json
c
@new_url.to_json
@new_url
c
@new_url.id
url.id
if url.id != nil do
if @new_url.id != nil do
if @new_url.id != nil do p "haha"
if @new_url.id != nil do put "haha" else put "noo" end
if @new_url.id != nil do puts "haha" else puts "noo" end
@new_url
exit
@new_url
exit
row
c
row
exit
row
exit
e
c
row[0]
row
c
values[1][1]
values[1][0]
values[1][1]
values[1]
values[0]
c
params
c
ori_link.long.gsub(/(http)[s]*[:](\/\/)/, '')
ori_link.long.gsub("(http)[s]*[:](\/\/)", '')
c
ori_link.long
ori_link.long.gsub("(http)[s]*[:](\/\/)", '')
c
ori_link.long
c
ori_link.long
c
ori_link.long
ori_link
c
@alert_msg
exit
@alert_msg
@alert_msg.to_json
exit
@alert_msg.to_json
c
params[:url][:long]
params
c
n
e
n
params
@form
form
